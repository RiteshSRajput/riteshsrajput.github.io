import{r as s,c as e,d as t,h as i,g as h}from"./p-8188e849.js";import{B as c}from"./p-16d6f0ca.js";const o={en:{selectAll:"Select All",more:"More",less:"Less"}},r="dxp-checkbox",l=class{constructor(t){s(this,t),this.items=[],this.flag=!1,this.isValid=!1,this.alignment="horizontal",this.required=!1,this.selectAll=!1,this.separatorRequired=!1,this.onCheckboxSelect=e(this,"checkboxItemsData",7)}checkboxesChangeHandler(){this.items=this.base.createNestedMarkup(this.checkBoxContainer,r,this.checkboxItemsData)}componentWillLoad(){this.base=new c(this,t),this.base.i18Init(t,"Checkbox",o);const s=Math.floor(100*Math.random());this.checkboxId=`dxp-checkbox-${s}`}componentDidLoad(){this.checkboxesChangeHandler();const s=this.items.length?this.items:this.element.querySelectorAll(r);if(s&&s.length)for(let e=0;e<s.length;e++)s[e].setAttribute("set-alignment",this.alignment),s[e].required&&(s[e].disabled=!0,s[e].checked=!0),this.initialItemsCount&&0!==this.initialItemsCount&&e>=this.initialItemsCount&&s[e].setAttribute("style","display:none")}handleClickEvent(s){let e;if(this.base.routingEventListener(s),s.target){const t=s.composedPath()[0];e="INPUT"===t.nodeName?t:t.querySelector("input")}else e=s.target;if(document.head.attachShadow){const s=this.element.querySelector(`#${this.checkboxId}`),t=[];this.createCheckboxArray(t),this.updateCheckboxState(e,t,s)}else{const s=this.element.querySelector(`[id='${this.checkboxId}']`),t=this.element.querySelectorAll(".checkbox");this.updateCheckboxState(e,t,s)}}handleValidationEvent(s){if(this.flag=s.detail.flag,this.flag){const e=this.element.querySelector(".error-messsage-parent"),t=document.createElement("p");t.className="dxp-error error-message sc-dxp-checkbox-group";const i=document.createTextNode(s.detail.message);t.appendChild(i),e.appendChild(t)}else{const s=this.element.querySelector(".dxp-error");s&&s.remove()}}checkboxCheckedStatus(s,e){for(const t of Object.keys(s))e.push(s[t].checked)}checkboxDataHandler(s,e){if(s.includes(!0)){const s=[];for(const t of Object.keys(e))e[t].checked&&s.push({label:e[t].name,value:e[t].value});this.onCheckboxSelect.emit(s),t.log.info(this.element.tagName,"checkboxDataHandler()",s)}}createCheckboxArray(s){const e=this.items.length?this.items:this.element.querySelectorAll(r);for(const t of e)s.push(t.querySelector(".checkbox"))}handleMore(s){const e=this.items.length?this.items:this.element.querySelectorAll(r);if(s.currentTarget.innerHTML===`${t.i18n.t("Checkbox:less")}<i class="icons-sprite remove-icon"></i>`){if(s.currentTarget.innerHTML=`${t.i18n.t("Checkbox:more")}<i class="icons-sprite add-icon"></i>`,e&&e.length)for(let t=0;t<e.length;t++)"horizontal"===this.alignment?(e[t].setAttribute("style","display:inline"),e[t].setAttribute("set-alignment",this.alignment)):(e[t].setAttribute("style","display:block"),e[t].setAttribute("set-alignment",this.alignment)),t>=this.initialItemsCount&&(e[t].setAttribute("style","display:none"),e[t].setAttribute("set-alignment",this.alignment))}else{s.currentTarget.innerHTML=`${t.i18n.t("Checkbox:less")}<i class="icons-sprite remove-icon"/>`;for(const s of e)"vertical"===this.alignment?(s.setAttribute("style","display:block"),s.setAttribute("set-alignment",this.alignment)):(s.setAttribute("style","display:inline"),s.setAttribute("set-alignment",this.alignment))}}renderInitialItems(){return this.checkboxItemsData?this.initialItemsCount<this.checkboxItemsData.length?i("a",{onClick:s=>{s.preventDefault(),this.handleMore(s)},href:"javascript.void(0);",class:"action-link"},t.i18n.t("Checkbox:more"),"‎",i("i",{class:"icons-sprite add-icon"})):"":this.initialItemsCount<this.element.querySelectorAll(r).length?i("a",{onClick:s=>{s.preventDefault(),this.handleMore(s)},href:"javascript.void(0);",class:"action-link"},t.i18n.t("Checkbox:more"),"‎",i("i",{class:"icons-sprite add-icon"})):""}renderSelectAll(){return!0===this.selectAll?i("div",{class:"checkbox-item"},i("input",{type:"checkbox",name:"select-all",id:this.checkboxId,"aria-describedby":this.isValid?"error-message":void 0,class:"select-all",value:"Select All"}),i("label",{htmlFor:this.checkboxId,class:this.isValid?"checkbox-error":void 0},t.i18n.t("Checkbox:selectAll"),"‎")):""}selectAllCheckboxes(s,e,t){if(s&&e)for(const i of Object.keys(t))t[i].disabled||(t[i].checked=!0,t[i].nextElementSibling.classList.remove("checkbox-error"))}selectAllElementChecked(s,e,t){!e.includes(!1)&&t?t.checked=!0:!s&&t&&(t.checked=!1)}showErrorMessage(){return i("p",{class:"caption","aria-required":this.required?"true":"","aria-invalid":"false"},this.caption,"‎",this.required?i("span",{class:"dxp-required"}," ",i("span",{"aria-hidden":"true"},"*")):"",this.required&&this.isValid&&"horizontal"===this.alignment?i("p",{class:"dxp-error",id:"error-message","aria-label":this.validationMessage},this.validationMessage):"")}uncheckAllCheckboxes(s,e,t){if(s&&!e)for(const i of Object.keys(t))t[i].disabled||(t[i].checked=!1)}updateCheckboxState(s,e,t){const i=[],h=!!s&&s.nodeName,c=!!s&&s.classList.contains("select-all"),o=!!s&&s.checked;this.selectAllCheckboxes(c,o,e),this.uncheckAllCheckboxes(c,o,e),this.checkboxCheckedStatus(e,i),this.selectAllElementChecked(c,i,t),this.required&&"INPUT"===h&&(this.isValid=!i.includes(!0)),this.checkboxDataHandler(i,e)}render(){t.log.debug(this.element.tagName,"render()","rendering Checkbox component : DEVELOPMENT");const s=[i("link",{rel:"stylesheet",href:""}),[this.theme&&i("link",{rel:"stylesheet",href:""})],[this.theme&&i("link",{rel:"stylesheet",href:`${t.config.get("DXP_STYLE_BASE_URL")}/themes/${this.theme}/dxp-checkbox.min.css`})]];return i("div",{class:`${this.base.componentClass()} dxp-col-12 ${this.alignment}`,dir:this.dir,"data-theme":this.theme},s,i("div",{class:"error-messsage-parent"},this.showErrorMessage(),this.separatorRequired?i("dxp-line",{type:"line",height:2,"custom-class":"checkbox-seperator"}):"",this.renderSelectAll(),this.required&&this.isValid&&"vertical"===this.alignment?i("p",{class:"dxp-error",id:"error-message","aria-label":this.validationMessage},this.validationMessage):"",i("div",{class:"item-list",ref:s=>this.checkBoxContainer=s},i("slot",null)),this.initialItemsCount&&0!==this.initialItemsCount?this.renderInitialItems():""))}get element(){return h(this)}static get watchers(){return{checkboxItemsData:["checkboxesChangeHandler"]}}static get style(){return"div.dxp.dxp-checkbox-group input[type=checkbox]{opacity:0;position:absolute}div.dxp.dxp-checkbox-group .caption{margin-bottom:.25rem}div.dxp.dxp-checkbox-group dxp-line{margin-bottom:.6875rem;display:block}div.dxp.dxp-checkbox-group .checkbox-item{position:relative}div.dxp.dxp-checkbox-group .action-link{position:relative;padding-right:1.25rem;display:inline-block}div.dxp.dxp-checkbox-group .action-link i{position:absolute;top:1px;right:0}div.dxp.dxp-checkbox-group .select-all+label{padding-left:1.5rem;position:relative}div.dxp.dxp-checkbox-group .select-all+label:before{content:\"\";display:inline-block;width:1rem;height:1rem;top:.0625rem;position:absolute;left:0}div.dxp.dxp-checkbox-group .error-messsage-parent .error-message{padding-left:24px}div.dxp.dxp-checkbox-group.horizontal .checkbox-item{display:inline-block;margin-right:10px}div.dxp.dxp-checkbox-group.horizontal .item-list{display:inline-block}div.dxp.dxp-checkbox-group.vertical{display:block}div.dxp.dxp-checkbox-group.vertical .item-list{display:block;margin-top:.125rem}div.dxp.dxp-checkbox-group.vertical .item-list dxp-checkbox{margin-top:.125rem}div.dxp.dxp-checkbox-group.vertical .checkbox-item+.dxp-error{padding-left:1.625rem;margin:0}div.dxp.dxp-checkbox-group.vertical .action-link{margin-top:.5rem}div.dxp.dxp-checkbox-group[dir=rtl] input[type=checkbox]+label{padding-right:1.5rem;padding-left:0}div.dxp.dxp-checkbox-group[dir=rtl] input[type=checkbox]+label:before{margin-right:0;margin-left:1rem;left:inherit;right:0}div.dxp.dxp-checkbox-group[dir=rtl].horizontal .checkbox-item{margin-right:0;margin-left:.625rem}div.dxp.dxp-checkbox-group[dir=rtl].vertical .dxp-error{padding-left:0;padding-right:1.5rem}div.dxp.dxp-checkbox-group[dir=rtl] .action-link{padding-left:1.25rem;padding-right:0}div.dxp.dxp-checkbox-group[dir=rtl] .action-link i{right:inherit;left:0}"}};export{l as dxp_checkbox_group};